server {
  listen 80;

  # CORS headers
  add_header 'Access-Control-Allow-Origin' '*' always;
  add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PUT, OPTIONS' always;
  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;

  # Handle OPTIONS method
  if ($request_method = 'OPTIONS') {
    return 204;
  }

  location /api/dotnet/ {
    rewrite ^/api/dotnet/(.*)$ /$1 break;
    proxy_pass http://dotnet:5032;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Prefix /api/dotnet;
  }

  location /api/go/ {
    rewrite ^/api/go/(.*)$ /$1 break;
    proxy_pass http://go:8080;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Prefix /api/go;
  }
}
